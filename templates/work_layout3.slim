doctype html
html
	head
		title = @title
		script src="#{_asset('/js/jquery-172.js')}" type="text/javascript"
		link rel='stylesheet' type='text/css' href='#{_asset("/css/style.css")}'
		link rel='stylesheet' type='text/css' href='#{_asset("/_assets/work/css/work.css")}'
		link rel='stylesheet' type='text/css' href='#{_asset("/_assets/work/css/task.css")}'
	body
		#wrap
			#header
				.top_menu
					- if @work_menu
						- request_path = _match_path(request.path, @work_menu.values) 
						- @work_menu.each do | name, link |
							- focus1 = link == request_path ? "focus1" : ""
							span.item : a class="#{focus1}" href="#{_url(link)}" = L[name]

						label.item2 : a href="/_logout" = L[:logout]
						label.item2 #{_user[:name]} 

				== _inc(:_message)

			#bodyer
				#left_bar
					ul
						- @left_menu.each do | title, menu |
							li.title
								span = L[title]
							li.body
								ul
									- if menu
										- menu.each do | name, id |
											- focus2 = @qs[:wgid] == id.to_s ? "focus2" : ""
											li
												a class="#{focus2}" href="#{_url2('/work/task', :wgid => id)}" = L[name]

				#right_body
					.top_menu
						.left
							- if request.path == '/work/task/edit'
								input.button type="submit" value="#{L[:done]}" form="task_edit_form"
								a href="#{_url2('/work/task')}"
									input.button type="button" value="#{L[:return]}"
							- else
								a href="#{_url2('/work/task/edit')}"
									input.button type="button" value="#{L[:create]}"

						ul.right
							- unless @top_menu1.empty?
								- @top_menu1.each do | key, val |
									- if key == :sp
										li |
									- else
										- val.each do | k, v |
											li
												- focus2 = @qs[key] == k.to_s ? "focus2" : ""
												a class="#{focus2}" href="#{_url2(request.path, key => k.to_s)}" = v

					.clear

					.top_menu.right
						- unless @top_menu2[@qs[:vt].to_sym].empty?
							ul
								- @top_menu2[@qs[:vt].to_sym].each do | key, val |
									- if key == :sp
										li |
									- else
										- val.each do | k, v |
											li
												- focus2 = @qs[key] == k.to_s ? "focus2" : ""
												a class="#{focus2}" href="#{_url2(request.path, key.to_sym => k.to_s)}" = v

					.clear

					#main == yield

			#footer.clear
